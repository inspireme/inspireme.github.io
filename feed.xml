<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
    <channel>
        <title>whisper</title>
        <description>whisper&#39;s homepage</description>
        <link>https://inspireme.github.io</link>
        <atom:link href="https://inspireme.github.io/feed.xml" rel="self" type="application/rss+xml" />
        
            <item>
                <title>初めてのPHP プログラミング</title>
                
                    <dc:creator>whisper</dc:creator>
                
                
                    <description>&lt;p&gt;ZendFrameworkを基づき、PHP開発フレームワークの構成に行う&lt;/p&gt;

</description>
                
                <pubDate>Sun, 24 Jul 2016 00:00:00 +0000</pubDate>
                <link>https://inspireme.github.io/php/2016/07/24/zendf.html</link>
                <guid isPermaLink="true">https://inspireme.github.io/php/2016/07/24/zendf.html</guid>
            </item>
        
            <item>
                <title>Javaメソッド参照</title>
                
                    <dc:creator>whisper</dc:creator>
                
                
                    <description>&lt;p&gt;メソッド参照は、JDK1.8で導入された構文。
関数型インターフェース（抽象メソッドが1つだけ定義されているインターフェース）の変数にメソッドそのものを代入することが出来る。&lt;br /&gt;
※メソッド参照の形式は常に以下の２種となる。&lt;br /&gt;
①クラス名::メソッド名(staticメソッド)&lt;br /&gt;
②インスタンス変数名::メソッド名(インスタンスメソッド)&lt;br /&gt;&lt;/p&gt;

</description>
                
                <pubDate>Sun, 10 Jul 2016 00:00:00 +0000</pubDate>
                <link>https://inspireme.github.io/java/2016/07/10/java8-methodreference.html</link>
                <guid isPermaLink="true">https://inspireme.github.io/java/2016/07/10/java8-methodreference.html</guid>
            </item>
        
            <item>
                <title>Javaラムダ式</title>
                
                    <dc:creator>whisper</dc:creator>
                
                
                    <description>&lt;p&gt;ラムダ式は、JDK1.8で導入された構文。
関数型インターフェース（抽象メソッドが1つだけ定義されているインターフェース）の変数に代入する箇所ではラムダ式を渡すことが出来る。&lt;br /&gt;
※インタフェースには一つだけのメソッドといっても、defalut method,static methodに限らない。0個か2個以上でしたら、実装対象のメソッドを決定できない為、
コンパイルエラーになる&lt;/p&gt;

</description>
                
                <pubDate>Tue, 05 Jul 2016 00:00:00 +0000</pubDate>
                <link>https://inspireme.github.io/java/2016/07/05/java8-lambda.html</link>
                <guid isPermaLink="true">https://inspireme.github.io/java/2016/07/05/java8-lambda.html</guid>
            </item>
        
            <item>
                <title>動画配信に関する基礎知識</title>
                
                    <dc:creator>whisper</dc:creator>
                
                
                    <description>&lt;p&gt;動画配信に関する基礎知識（VOD, ストリーミングの種類や特徴、HLS/HDSなどの方式や拡張子・コーデック, その他&lt;/p&gt;

</description>
                
                <pubDate>Sun, 26 Jun 2016 00:00:00 +0000</pubDate>
                <link>https://inspireme.github.io/video/2016/06/26/video.html</link>
                <guid isPermaLink="true">https://inspireme.github.io/video/2016/06/26/video.html</guid>
            </item>
        
            <item>
                <title>markdownの使い方</title>
                
                    <dc:creator>whisper</dc:creator>
                
                
                    <description>&lt;p&gt;Markdown の使い方、API
&lt;br /&gt;&lt;/p&gt;

</description>
                
                <pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate>
                <link>https://inspireme.github.io/markdown/2016/06/01/markdown-roll.html</link>
                <guid isPermaLink="true">https://inspireme.github.io/markdown/2016/06/01/markdown-roll.html</guid>
            </item>
        
    </channel>
</rss>
